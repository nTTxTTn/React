{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git\\\\React\\\\my-app\\\\src\\\\Notification\\\\NotificationList.jsx\";\nimport React from 'react';\nimport Notification from './Notification';\nimport notification from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reserveNotifications = [{\n  id: 1,\n  message: \"안녕하세요. 오늘의 일정을 알려드리겠습니다\"\n}, {\n  id: 2,\n  message: \"점심식사 시간입니다\"\n}, {\n  id: 3,\n  message: \"이제 곧 미팅이 시작됩니다.\"\n}];\nvar timer;\nclass NotificationList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: []\n    };\n  }\n\n  //-----------생명주기--------------//\n  componentDidMount() {\n    const {\n      notifications\n    } = this.state;\n    timer = setInterval(() => {\n      if (notifications.length < reserveNotifications.length) {\n        const index = notifications.length;\n        notifications.push(reserveNotifications[index]);\n\n        //-----state update--------//\n        this.setState({\n          notifications: notifications\n        });\n      } else {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.notifications.map(notification => {\n        return /*#__PURE__*/_jsxDEV(Notification, {\n          id: notification.id,\n          message: notification.message\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default NotificationList;","map":{"version":3,"names":["React","Notification","notification","jsxDEV","_jsxDEV","reserveNotifications","id","message","timer","NotificationList","Component","constructor","props","state","notifications","componentDidMount","setInterval","length","index","push","setState","clearInterval","render","children","map","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/Git/React/my-app/src/Notification/NotificationList.jsx"],"sourcesContent":["import React from 'react';\r\nimport Notification from './Notification';\r\nimport notification from \"./Notification\";\r\n\r\nconst reserveNotifications = [\r\n    {\r\n        id: 1,\r\n        message: \"안녕하세요. 오늘의 일정을 알려드리겠습니다\",\r\n    },\r\n    {\r\n        id:2,\r\n        message: \"점심식사 시간입니다\",\r\n    },\r\n    {\r\n        id:3,\r\n        message: \"이제 곧 미팅이 시작됩니다.\",\r\n    },\r\n];\r\n\r\nvar timer;\r\n\r\nclass NotificationList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            notifications: [],\r\n        };\r\n    }\r\n\r\n\r\n//-----------생명주기--------------//\r\n    componentDidMount() {\r\n        const {notifications} = this.state;\r\n        timer = setInterval(() => {\r\n            if (notifications.length < reserveNotifications.length) {\r\n                const index = notifications.length;\r\n                notifications.push(reserveNotifications[index]);\r\n\r\n\r\n                //-----state update--------//\r\n                this.setState({\r\n                    notifications: notifications,\r\n                });\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.notifications.map((notification) => {\r\n                  return <Notification\r\n                  key={notification.id}\r\n                  id={notification.id}\r\n                      message = {notification.message} />;\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotificationList;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,oBAAoB,GAAG,CACzB;EACIC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE;AACb,CAAC,EACD;EACID,EAAE,EAAC,CAAC;EACJC,OAAO,EAAE;AACb,CAAC,EACD;EACID,EAAE,EAAC,CAAC;EACJC,OAAO,EAAE;AACb,CAAC,CACJ;AAED,IAAIC,KAAK;AAET,MAAMC,gBAAgB,SAAST,KAAK,CAACU,SAAS,CAAC;EAC3CC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,aAAa,EAAE;IACnB,CAAC;EACL;;EAGJ;EACIC,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAACD;IAAa,CAAC,GAAG,IAAI,CAACD,KAAK;IAClCL,KAAK,GAAGQ,WAAW,CAAC,MAAM;MACtB,IAAIF,aAAa,CAACG,MAAM,GAAGZ,oBAAoB,CAACY,MAAM,EAAE;QACpD,MAAMC,KAAK,GAAGJ,aAAa,CAACG,MAAM;QAClCH,aAAa,CAACK,IAAI,CAACd,oBAAoB,CAACa,KAAK,CAAC,CAAC;;QAG/C;QACA,IAAI,CAACE,QAAQ,CAAC;UACVN,aAAa,EAAEA;QACnB,CAAC,CAAC;MACN,CAAC,MAAM;QACHO,aAAa,CAACb,KAAK,CAAC;MACxB;IACJ,CAAC,EAAE,IAAI,CAAC;EACZ;EACAc,MAAMA,CAAA,EAAG;IACL,oBACIlB,OAAA;MAAAmB,QAAA,EACK,IAAI,CAACV,KAAK,CAACC,aAAa,CAACU,GAAG,CAAEtB,YAAY,IAAK;QAC9C,oBAAOE,OAAA,CAACH,YAAY;UAEpBK,EAAE,EAAEJ,YAAY,CAACI,EAAG;UAChBC,OAAO,EAAIL,YAAY,CAACK;QAAQ,GAF/BL,YAAY,CAACI,EAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEkB,CAAC;MACzC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ;AAEA,eAAenB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}